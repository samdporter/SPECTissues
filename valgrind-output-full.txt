==231165== Memcheck, a memory error detector
==231165== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==231165== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==231165== Command: python OSEM.py -g -t numpy/core/tests/test_dtype.py -- -vv --valgrind --valgrind-log=./valgrind-output-full --continue-on-collection-errors --leak-check=full
==231165== Parent PID: 225841
==231165== 
==231165== 
==231165== Process terminating with default action of signal 6 (SIGABRT)
==231165==    at 0x4A3EA7C: __pthread_kill_implementation (pthread_kill.c:44)
==231165==    by 0x4A3EA7C: __pthread_kill_internal (pthread_kill.c:78)
==231165==    by 0x4A3EA7C: pthread_kill@@GLIBC_2.34 (pthread_kill.c:89)
==231165==    by 0x49EA475: raise (raise.c:26)
==231165==    by 0x49D07F2: abort (abort.c:79)
==231165==    by 0x3175FBFD: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==231165==    by 0x3176B28B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==231165==    by 0x3176A268: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==231165==    by 0x3176A9D8: __gxx_personality_v0 (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==231165==    by 0x8B97C63: ??? (in /usr/lib/x86_64-linux-gnu/libgcc_s.so.1)
==231165==    by 0x8B986BC: _Unwind_Resume (in /usr/lib/x86_64-linux-gnu/libgcc_s.so.1)
==231165==    by 0x527CF8AF: stir::ProjData::get_related_viewgrams(stir::ViewSegmentNumbers const&, std::shared_ptr<stir::DataSymmetriesForViewSegmentNumbers> const&, bool) const [clone .cold] (in /home/sam/devel/build/INSTALL/python/sirf/_pystir.so)
==231165==    by 0x529C4A67: stir::distributable_computation(std::shared_ptr<stir::ForwardProjectorByBin> const&, std::shared_ptr<stir::BackProjectorByBin> const&, std::shared_ptr<stir::DataSymmetriesForViewSegmentNumbers> const&, stir::DiscretisedDensity<3, float>*, stir::DiscretisedDensity<3, float> const*, std::shared_ptr<stir::ProjData> const&, bool, int, int, int, int, bool, double*, std::shared_ptr<stir::ProjData> const&, std::shared_ptr<stir::BinNormalisation>, double, double, void (*)(std::shared_ptr<stir::ForwardProjectorByBin> const&, std::shared_ptr<stir::BackProjectorByBin> const&, stir::RelatedViewgrams<float>*, int&, int&, double*, stir::RelatedViewgrams<float> const*, stir::RelatedViewgrams<float> const*), stir::DistributedCachingInformation*) [clone ._omp_fn.0] (in /home/sam/devel/build/INSTALL/python/sirf/_pystir.so)
==231165==    by 0x314B2A15: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==231165== 
==231165== HEAP SUMMARY:
==231165==     in use at exit: 570,400,789 bytes in 570,147 blocks
==231165==   total heap usage: 4,469,984 allocs, 3,899,837 frees, 2,923,578,290 bytes allocated
==231165== 
==231165== LEAK SUMMARY:
==231165==    definitely lost: 141,764 bytes in 348 blocks
==231165==    indirectly lost: 28,696 bytes in 270 blocks
==231165==      possibly lost: 260,943,498 bytes in 207,759 blocks
==231165==    still reachable: 309,286,831 bytes in 361,770 blocks
==231165==                       of which reachable via heuristic:
==231165==                         stdstring          : 25,582 bytes in 681 blocks
==231165==                         length64           : 32 bytes in 2 blocks
==231165==                         newarray           : 227,256 bytes in 397 blocks
==231165==                         multipleinheritance: 96 bytes in 1 blocks
==231165==         suppressed: 0 bytes in 0 blocks
==231165== Rerun with --leak-check=full to see details of leaked memory
==231165== 
==231165== For lists of detected and suppressed errors, rerun with: -s
==231165== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
